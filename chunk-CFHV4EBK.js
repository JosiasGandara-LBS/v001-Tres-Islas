import{Bd as _,Dd as u,Fd as w,Gd as c,Id as t,Jd as p,Ld as F,Md as h,Nd as n,Od as d,Pd as y,U as O,_ as g,a as f,f as s,i as D,u as C}from"./chunk-NAS4OXTP.js";var I=(()=>{class i{constructor(){this._firestore=g(_)}getOrdersWithStatus(r){let e=c(this._firestore,"orders"),o=n(e,y("status","==",r),h("createdDate","asc"));return u(o,{idField:"id"})}getOrdersWithAnyParameter(){let r=c(this._firestore,"orders"),e=n(r,h("createdDate","asc"));return u(e,{idField:"id"})}getOrderById(r){return s(this,null,function*(){let e=t(this._firestore,`orders/${r}`),o=yield p(e);if(o.exists())return f({id:r},o.data());throw new Error("No such document!")})}addOrder(r){let e=c(this._firestore,"orders");return w(e,r)}updateOrderStatusField(r,e,o){return s(this,null,function*(){let a=t(this._firestore,`orders/${r}`);return d(a,{[e]:o}).then(()=>{console.log("Campo actualizado con \xE9xito")}).catch(l=>{console.error("Error actualizando el campo:",l)})})}setOrderAsChecked(r){return s(this,null,function*(){let e=t(this._firestore,`orders/${r}`);return d(e,{isChecked:1}).then(()=>{console.log("Campo actualizado con \xE9xito")}).catch(o=>{console.error("Error actualizando el campo:",o)})})}cancelOrder(r){return s(this,null,function*(){let e=t(this._firestore,`orders/${r}`);return d(e,{status:0}).then(()=>{console.log("Pedido cancelado con \xE9xito")}).catch(o=>{console.error("Error cancelando el pedido:",o)})})}setOrderAsPaid(r){return s(this,null,function*(){let e=t(this._firestore,`orders/${r}`);return d(e,{pendingPayment:!1}).then(()=>{}).catch(o=>{console.error("Error pagando el pedido:",o)})})}getOrderHistoryByState(r){let e=c(this._firestore,"orderHistory"),o=n(e,y("status","==",r),h("createdDate","asc"));return u(o,{idField:"id"})}getOrderByIdHistory(r){return s(this,null,function*(){let e=t(this._firestore,`orderHistory/${r}`),o=yield p(e);if(o.exists())return f({id:r},o.data());throw new Error("No such document!")})}setOrderAsCheckedHistory(r){let e=t(this._firestore,`orderHistory/${r}`);return d(e,{isChecked:1}).then(()=>{}).catch(o=>{console.error("Error actualizando el campo:",o)})}validateCurrentOrdersIds(r){let e=c(this._firestore,"orders"),o=n(e,y("id","in",r));return u(o,{idField:"id"}).pipe(C(a=>a.map(l=>l.id)))}listenForOrdersChanges(){let r=c(this._firestore,"orders"),e=n(r,h("createdDate","asc"));return new D(o=>{let a=F(e,l=>{let x=l.docs.map(m=>f({id:m.id},m.data()));o.next(x)});return()=>a()})}static{this.\u0275fac=function(e){return new(e||i)}}static{this.\u0275prov=O({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();export{I as a};
